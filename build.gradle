plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2025.0.0"
    }
}

group = 'com.deal4u'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// Checkstyle 설정 블록 추가
checkstyle {
    // 1. 사용할 Checkstyle 라이브러리 버전을 지정합니다.
    toolVersion = '10.26.1'

    // 2. 사용자가 생성한 checkstyle.xml 파일의 경로를 지정합니다.
    configFile = file("${project.rootDir}/config/codestyle/checkstyle.xml")

    // 3. Checkstyle 검사 시 경고(warning)를 얼마나 허용할지 정합니다. 0으로 하면 경고가 하나라도 있으면 빌드가 실패합니다.
    maxWarnings = 0
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'


    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    implementation "software.amazon.awssdk:s3:2.31.78"

    testImplementation 'org.awaitility:awaitility:4.2.0'
    testCompileOnly 'org.projectlombok:lombok:1.18.38'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'


    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
}

tasks.named('check') {
    dependsOn 'checkstyleMain'
}

tasks.named('test') {
    useJUnitPlatform()
}
