jwt:
  secret: ${JWT_SECRET}
  access-token-expiration: 900000   # 15분 (ms 단위)
  refresh-token-expiration: 604800000 # 7일

spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      data-locations: classpath:data-ci.sql
  mail:
    host: ${SMTP_HOST}       # SMTP 서버 호스트
    port: ${SMTP_PORT}               # SMTP 서버 포트
    username: ${SMTP_USERNAME}                # SMTP 서버 로그인 아이디
    password: ${SMTP_PASSWORD}                # SMTP 서버 로그인 비밀번호
    properties:
      mail:
        smtp:
          auth: true            # 사용자 인증 시도 여부
          starttls:
            enable: true        # starttls 활성화 여부
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "http://localhost:8080/api/v1/login/google"
            scope:
              - email
              - profile
          naver:
            client-id: ${NAVER_CLIENT_ID} # 발급 받은 Client ID
            client-secret: ${NAVER_CLIENT_SECRET} # 발급 받은 Client Secret
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/naver"
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정

toss:
  secret-key: ${TOSS_SECRET_KEY}
deal4u:
  host-url: ${HOST_URL}
  s3:
    region: ${S3_REGION}
    bucket-name: ${S3_BUCKET_NAME}
    secret-key: ${S3_SECRET_KEY}
    access-key: ${S3_ACCESS_KEY}
